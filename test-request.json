{
  "content": "# JavaScript 비동기 처리\n\nJavaScript에서 비동기 처리는 매우 중요한 개념입니다.\n\n## Promise 사용법\n\n```js\nfunction fetchData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(\"데이터 로드 완료\");\n    }, 1000);\n  });\n}\n```\n\n## async/await 패턴\n\nasync/await를 사용하면 더 깔끔한 코드를 작성할 수 있습니다.\n\n```javascript\nasync function getData() {\n  try {\n    const result = await fetchData();\n    console.log(result);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n이렇게 사용하면 비동기 코드를 동기 코드처럼 작성할 수 있습니다.",
  "contentType": "markdown",
  "options": {
    "enhanceCodeBlocks": true,
    "improveHeadingStructure": true,
    "includeTableOfContents": true
  }
}
